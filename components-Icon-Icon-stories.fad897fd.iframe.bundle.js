"use strict";(self.webpackChunkreact_cloudbox_alerts=self.webpackChunkreact_cloudbox_alerts||[]).push([[311],{"./src/components/Icon/Icon.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const Icon=({name="",set="ri",size="md",color="currentColor",className="",...props})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("i",{className:`${(()=>{if("ri"===set)return`ri-${name}`;if("fa"===set){return`${name.startsWith("fab-")?"fab":name.startsWith("far-")?"far":"fas"} fa-${name.replace(/^(fab|far|fas)-/,"")}`}return name})()} ${className}`,style:{fontSize:{xs:"0.75rem",sm:"0.875rem",md:"1rem",lg:"1.25rem",xl:"1.5rem","2xl":"2rem","3xl":"3rem"}[size]||size,color,...props.style},...props});Icon.propTypes={name:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired,set:prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(["ri","fa"]),size:prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(["xs","sm","md","lg","xl","2xl","3xl"]),prop_types__WEBPACK_IMPORTED_MODULE_1___default().string]),color:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,className:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,style:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object};const __WEBPACK_DEFAULT_EXPORT__=Icon;Icon.__docgenInfo={description:"Icon Component\n\nRenders icons from different icon sets (Remix Icon, Font Awesome, etc.)",methods:[],displayName:"Icon",props:{name:{defaultValue:{value:"''",computed:!1},description:"Icon name (e.g. 'alert-line' for Remix Icon, 'info-circle' for Font Awesome)",type:{name:"string"},required:!1},set:{defaultValue:{value:"'ri'",computed:!1},description:"Icon set to use (e.g., 'ri' for Remix Icon, 'fa' for Font Awesome)",type:{name:"enum",value:[{value:"'ri'",computed:!1},{value:"'fa'",computed:!1}]},required:!1},size:{defaultValue:{value:"'md'",computed:!1},description:"Icon size (predefined or CSS value)",type:{name:"union",value:[{name:"enum",value:[{value:"'xs'",computed:!1},{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1},{value:"'xl'",computed:!1},{value:"'2xl'",computed:!1},{value:"'3xl'",computed:!1}]},{name:"string"}]},required:!1},color:{defaultValue:{value:"'currentColor'",computed:!1},description:"Icon color",type:{name:"string"},required:!1},className:{defaultValue:{value:"''",computed:!1},description:"Additional CSS class",type:{name:"string"},required:!1},style:{description:"Additional props",type:{name:"object"},required:!1}}}},"./src/components/Icon/Icon.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Colored:()=>Colored,FontAwesome:()=>FontAwesome,IconGrid:()=>IconGrid,RemixIcon:()=>RemixIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Icon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Icon/Icon.jsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Icon",component:_Icon__WEBPACK_IMPORTED_MODULE_1__.A,parameters:{docs:{description:{component:"Icon component for displaying different icon sets."}}},argTypes:{name:{control:"text",description:"Icon name",table:{type:{summary:"string"}}},set:{control:{type:"select",options:["ri","fa"]},description:"Icon set to use",table:{type:{summary:"string"},defaultValue:{summary:"ri"}}},size:{control:{type:"select",options:["xs","sm","md","lg","xl","2xl","3xl"]},description:"Icon size",table:{type:{summary:"string"},defaultValue:{summary:"md"}}},color:{control:"color",description:"Icon color",table:{type:{summary:"string"},defaultValue:{summary:"currentColor"}}}}},Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icon__WEBPACK_IMPORTED_MODULE_1__.A,args),RemixIcon=Template.bind({});RemixIcon.args={name:"alert-line",set:"ri",size:"lg"};const FontAwesome=Template.bind({});FontAwesome.args={name:"fas-info-circle",set:"fa",size:"lg"};const Colored=Template.bind({});Colored.args={name:"heart-fill",set:"ri",size:"xl",color:"#e873a9"};const IconGrid=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,"Remix Icons"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fill, minmax(120px, 1fr))",gap:"1rem"}},["information-line","check-line","close-circle-line","alert-line","question-line","user-line","settings-line","home-line","search-line","notification-line","heart-line","star-line"].map((iconName=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key:iconName,style:{display:"flex",flexDirection:"column",alignItems:"center",padding:"1rem",border:"1px solid #eee",borderRadius:"0.5rem",textAlign:"center"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icon__WEBPACK_IMPORTED_MODULE_1__.A,{name:iconName,set:"ri",size:"xl"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{style:{marginTop:"0.5rem",fontSize:"0.8rem"}},iconName))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{style:{marginTop:"2rem"}},"Font Awesome Icons"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fill, minmax(120px, 1fr))",gap:"1rem"}},["fas-info-circle","fas-check-circle","fas-exclamation-circle","fas-question-circle","fas-user","fas-cog","fas-home","fas-search","fas-bell","fas-heart","fas-star","fab-github"].map((iconName=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key:iconName,style:{display:"flex",flexDirection:"column",alignItems:"center",padding:"1rem",border:"1px solid #eee",borderRadius:"0.5rem",textAlign:"center"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icon__WEBPACK_IMPORTED_MODULE_1__.A,{name:iconName,set:"fa",size:"xl"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{style:{marginTop:"0.5rem",fontSize:"0.8rem"}},iconName)))))),__namedExportsOrder=["RemixIcon","FontAwesome","Colored","IconGrid"];RemixIcon.parameters={...RemixIcon.parameters,docs:{...RemixIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...RemixIcon.parameters?.docs?.source}}},FontAwesome.parameters={...FontAwesome.parameters,docs:{...FontAwesome.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...FontAwesome.parameters?.docs?.source}}},Colored.parameters={...Colored.parameters,docs:{...Colored.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...Colored.parameters?.docs?.source}}},IconGrid.parameters={...IconGrid.parameters,docs:{...IconGrid.parameters?.docs,source:{originalSource:"() => {\n  const remixIcons = ['information-line', 'check-line', 'close-circle-line', 'alert-line', 'question-line', 'user-line', 'settings-line', 'home-line', 'search-line', 'notification-line', 'heart-line', 'star-line'];\n  return <div>\n      <h3>Remix Icons</h3>\n      <div style={{\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n      gap: '1rem'\n    }}>\n        {remixIcons.map(iconName => <div key={iconName} style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '1rem',\n        border: '1px solid #eee',\n        borderRadius: '0.5rem',\n        textAlign: 'center'\n      }}>\n            <Icon name={iconName} set=\"ri\" size=\"xl\" />\n            <span style={{\n          marginTop: '0.5rem',\n          fontSize: '0.8rem'\n        }}>{iconName}</span>\n          </div>)}\n      </div>\n      \n      <h3 style={{\n      marginTop: '2rem'\n    }}>Font Awesome Icons</h3>\n      <div style={{\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n      gap: '1rem'\n    }}>\n        {['fas-info-circle', 'fas-check-circle', 'fas-exclamation-circle', 'fas-question-circle', 'fas-user', 'fas-cog', 'fas-home', 'fas-search', 'fas-bell', 'fas-heart', 'fas-star', 'fab-github'].map(iconName => <div key={iconName} style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '1rem',\n        border: '1px solid #eee',\n        borderRadius: '0.5rem',\n        textAlign: 'center'\n      }}>\n            <Icon name={iconName} set=\"fa\" size=\"xl\" />\n            <span style={{\n          marginTop: '0.5rem',\n          fontSize: '0.8rem'\n        }}>{iconName}</span>\n          </div>)}\n      </div>\n    </div>;\n}",...IconGrid.parameters?.docs?.source}}}}}]);